{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","myTasks","setMyTasks","myValue","setMyValue","className","onChange","e","target","value","maxlength","placeholder","onClick","length","id","Math","random","console","log","map","x","class","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAkEeA,MA/Df,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACRC,EADQ,KACCC,EADD,OAEeH,IAAMC,SAAS,IAF9B,mBAERG,EAFQ,KAECC,EAFD,KAiBb,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,uBACA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBACEA,UAAU,UACVC,SAtBK,SAACC,GAChBH,EAAWG,EAAEC,OAAOC,QAsBVA,MAAON,EACPO,UAAU,MACVC,YAAY,oBAEd,wBAAQN,UAAU,YAAYO,QApB1B,WACRT,EAAQU,QAAU,IACpBX,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAAEQ,MAAON,EAASW,GAAIC,KAAKC,aACnDZ,EAAW,IACXa,QAAQC,IAAIjB,EAASA,EAAQa,MAgBvB,sBAKJ,qBAAKT,UAAU,OAAf,SAEI,qBAAKA,UAAU,OAAf,SACGJ,EAAQkB,KAAI,SAACC,GAAD,OACX,sBAAKf,UAAU,QAAf,UACE,6BACE,6BACE,qBAAKgB,MAAM,UAAX,SAAsBD,EAAEX,YAG5B,wBACEJ,UAAU,YACVO,QAAS,WAxCV,IAACL,IAyCaa,EAAEN,GAxC/BZ,EAAWD,EAAQqB,QAAO,SAACF,GAAD,OAAOA,EAAEN,KAAOP,OAqC5B,gCCpCHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bccbfde.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nfunction App() {\n  let [myTasks, setMyTasks] = React.useState([]);\n  let [myValue, setMyValue] = React.useState(\"\");\n  let inputValue = (e) => {\n    setMyValue(e.target.value);\n    //console.log(myValue);\n  };\n  let deleteTask = (e) => {\n    setMyTasks(myTasks.filter((x) => x.id !== e));\n  };\n  let addTask = () => {\n    if (myValue.length >= 1) {\n      setMyTasks([...myTasks, { value: myValue, id: Math.random() }]);\n      setMyValue(\"\");\n      console.log(myTasks, myTasks.id);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"header\">TODO-List</div>\n      <div className=\"content\">\n        <div className=\"box1\">\n          <div className=\"text\">\n            <input\n              className=\"myInput\"\n              onChange={inputValue}\n              value={myValue}\n              maxlength=\"100\"\n              placeholder=\"max 100 letters\"\n            />\n            <button className=\"myButton1\" onClick={addTask}>\n              Add\n            </button>\n          </div>\n        </div>\n        <div className=\"box2\">\n          {\n            <div className=\"text\">\n              {myTasks.map((x) => (\n                <div className=\"tasks\">\n                  <ul>\n                    <li>\n                      <div class=\"taskval\">{x.value}</div>\n                    </li>\n                  </ul>\n                  <button\n                    className=\"myButton2\"\n                    onClick={() => {\n                      deleteTask(x.id);\n                    }}\n                  >\n                    X\n                  </button>\n                </div>\n              ))}\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}